<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Working in Linux on</title><link>https://obds-training.github.io/Help/docs/linux/working/</link><description>Recent content in Working in Linux on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="https://obds-training.github.io/Help/docs/linux/working/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux streams</title><link>https://obds-training.github.io/Help/docs/linux/working/streams/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/working/streams/</guid><description>What are streams? # Streams are mechanisms to pass data from one file or command to another.
For instance, a few common scenarios that use streams:
passing the contents &amp;ndash; not the name ! &amp;ndash; of a file as the input to a command passing the output of a command as the input to another command writing the output of a command to a (new or existing) file Some standard streams are commonly referred to in Linux:</description></item><item><title>The Linux pipe</title><link>https://obds-training.github.io/Help/docs/linux/working/pipes/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/working/pipes/</guid><description>What is the Linux pipe? # The Linux philosophy is that one tool should only perform only one task, in a way that complex workflows may be broken down into smaller tasks that can be resolved by combining multiple tools.
The Linux pipe is represented by the symbol | and provides a tool connecting the standard output of one command to the standard input of another command.
Using the Linux pipe # For instance, the standard output of a command command1 can be passed to the standard input of a command command2 using the sytax command1 | command2.</description></item><item><title>Combine commands</title><link>https://obds-training.github.io/Help/docs/linux/working/combine-commands/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/working/combine-commands/</guid><description>Successive commands # Generally, successive commands are executed in separate statements.
For instance:
echo &amp;quot;Some text&amp;quot; echo &amp;quot;Some more text&amp;quot; However, the symbol ; can be used to combine multiple commands in a single statement using the syntax command1; command2.
For instance:
echo &amp;quot;Some text&amp;quot;; echo &amp;quot;Some more text&amp;quot; The statements are executed in order, from left to right.
While there is no major preference toward either syntax, a noticeable difference between the two approaches is that:</description></item><item><title>Compress and decompress files</title><link>https://obds-training.github.io/Help/docs/linux/working/compress/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/working/compress/</guid><description>Why compress files? # Raw data files and files created during analyses can be large (up to hundreds of GB).
Compressing files is an efficient way to save disk space.
Compress using gzip # The gzip command can be used to compress files.
gzip file1.txt By default, the original file is removed, and the file extension .gz is added to the original file name, to form the name of the new compressed file.</description></item></channel></rss>