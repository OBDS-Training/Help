<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Files and directories on</title><link>https://obds-training.github.io/Help/docs/linux/files-and-directories/</link><description>Recent content in Files and directories on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="https://obds-training.github.io/Help/docs/linux/files-and-directories/index.xml" rel="self" type="application/rss+xml"/><item><title>Navigate directories</title><link>https://obds-training.github.io/Help/docs/linux/files-and-directories/navigate/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/files-and-directories/navigate/</guid><description>Print working directory # The working directory is the directory where the Bash session is currently located, and relative to which commands typed in a Terminal are executed.
The pwd command prints the current working directory.
pwd When you log into the CCB cluster, the working directory is initially set to the user&amp;rsquo;s home directory.
ðŸ‘‰ The 'pwd' command is entirely harmless. Do not hesitate to experiment and get comfortable with it!</description></item><item><title>Files and permissions</title><link>https://obds-training.github.io/Help/docs/linux/files-and-directories/permissions/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/files-and-directories/permissions/</guid><description>Example scenario # In this page, examples refer to the layout of files and directories illustrated in the schematic below.
Absolute and relative paths # Absolute file paths start from the &amp;lsquo;root&amp;rsquo; directory, represented by the / symbol.
For instance, in the example scenario illustrated above, the following file and directory paths are valid:
/ /bin /bin/bash /usr/local /usr/local/bin Relative file paths describe paths relative to the working directory.</description></item><item><title>Viewing and editing files</title><link>https://obds-training.github.io/Help/docs/linux/files-and-directories/view-and-edit/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/files-and-directories/view-and-edit/</guid><description>Display the contents of a file # Full contents # The cat &amp;lt;file&amp;gt; command can be used to display the entire contents of a file in the Terminal application.
For instance:
cat file2.csv ðŸ‘‰ While the 'cat' command is entirely harmless, it is highly inefficient for very large files and may freeze the Terminal application. If that happens, you may interrupt the command using the 'Control' and 'C' keyboard shortcut.</description></item><item><title>Manage files and directories</title><link>https://obds-training.github.io/Help/docs/linux/files-and-directories/manage/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://obds-training.github.io/Help/docs/linux/files-and-directories/manage/</guid><description>Creating empty files # The touch &amp;lt;file&amp;gt; command can be used to create new empty files.
Multiple files can be created in a single command.
For instance:
touch a.txt b.csv ðŸ‘‰ In the screenshot above, the zeroes highlighted in red indicate that the new files are empty (i.e., size of 0 bytes). If a file already exists, the touch command does not edit the contents of the file, but update the timestamp of the latest edit to the current date-time.</description></item></channel></rss>