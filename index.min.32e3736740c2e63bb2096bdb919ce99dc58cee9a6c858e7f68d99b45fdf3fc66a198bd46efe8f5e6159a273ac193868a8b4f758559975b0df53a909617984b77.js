var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(n){const s=suggestions.classList.contains("d-none");if(s)return;const e=[...suggestions.querySelectorAll("a")];if(e.length===0)return;const t=e.indexOf(document.activeElement);if(n.key==="ArrowUp"){n.preventDefault();const s=t>0?t-1:0;e[s].focus()}else if(n.key==="ArrowDown"){n.preventDefault();const s=t+1<e.length?t+1:t;e[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/wimm_ccb_doks/docs/prologue/introduction/",title:"Introduction",description:"The MRC WIMM Center for Computational Biology provides High-Performance Computing services to biomedical researchers at the University of Oxford.",content:"Get started # ðŸ‘‰  The MRC WIMM CCB services are available to members of staff and close collaborators.   Apply for an account on the CCB Account and Support â†’ page.\nGo further # Explore specific topics documented in the sections of the navigation menu on the left, or use the auto-completing search bar above to search by keyword.\nContributing # Contribute to this documentation on GitHub â†’.\nHelp # Contacts for help. Help\n"}).add({id:1,href:"/wimm_ccb_doks/docs/ssh/general-information/",title:"General information",description:"General information about the MRC WIMM CCB high-performance computing (HPC) cluster.",content:"Login nodes # The CCB cluster has three login nodes that users can log into:\n cbrglogin1.molbiol.ox.ac.uk cbrglogin2.molbiol.ox.ac.uk cbrglogin3.molbiol.ox.ac.uk  Compute nodes # The CCB cluster includes a number of compute nodes where the majority of computations are run.\n"}).add({id:2,href:"/wimm_ccb_doks/docs/ssh/first-connection/",title:"First connection",description:"Connecting to the MRC WIMM CCB high-performance computing (HPC) cluster for the first time.",content:"Log in with your username and password # When your account is created on the CCB cluster, you will be sent an email including your unique username on the CCB cluster and a randomly generated password.\nðŸ‘‰  You are encouraged to change your initial password on your first connection. More on that after we get you logged into the CCB cluster for the first time.   To log into a login node, open a Terminal on your personal computer and use the ssh command, combining your username, the @ symbol, and the name of the login node that you wish to log into. Conceptually, the command that you type in the Terminal should be structured as follows:\nssh \u0026lt;username\u0026gt;@\u0026lt;remote\u0026gt;  Replace \u0026lt;username\u0026gt; by your own username, and \u0026lt;remote\u0026gt; by one of the login nodes (see General information). When you have typed the command above, press the Return key to execute it.\n  Using the `ssh` command.\nIf this is indeed your very first connection, you may be prompted to verify the authenticity of the host. If this happens, type yes and press the Return key to continue connecting.\nWhen prompted for your password, type it and press the Return key.\nðŸ‘‰  For privacy and security reasons, the Terminal will not display your password as you type it. If you are having trouble typing your password correctly without seeing it, you can use a text editor to type it, then cut and paste it into the Terminal window when prompted.   You should now be logged in the MRC WIMM CCB high-performance computing (HPC) cluster. Welcome!\n"}).add({id:3,href:"/wimm_ccb_doks/docs/ssh/change-password/",title:"Change your password",description:"The randomly generated password that you received by email should be replaced by a new secure and memorable password.",content:"Motivation # The initial randomly generated password that you received by email is at risk of being stolen and misused if your email account were ever hacked. Separately, the randomness of the password makes it very difficult to remember and type from memory.\nIt is highly recommended to change that initial password on your first connection to the CCB cluster. To do so, in a Terminal logged in the CCB cluster, type the command passwd and press the Return key, as follows:\npasswd    Changing your password.\nWhen prompted, first type your current password (the randomly generated password that you were given in the email), and then type your new desired password twice, pressing the Return key after each password.\nðŸ‘‰  For privacy and security reasons, the Terminal will not display passwords as you type them. If you are having trouble typing your password correctly without seeing it, you can use a text editor to type it, then cut and paste it into the Terminal window when prompted.   You should then see a message indicating that your password was updated successfully.\n"}).add({id:4,href:"/wimm_ccb_doks/docs/ssh/ssh-key-pair/",title:"Set up an SSH key pair",description:"SSH key pairs provide a more secure alternative to username and password for logging into remote systems.",content:"Motivation # An SSH key pair can be used as an additional layer of security to connect to your account on the CCB HPC cluster. Instead of typing your username and password, it is possible to log into your account on the CCB cluster using a pair of files; one file on your personal computer (the \u0026ldquo;private\u0026rdquo; key), one file on the CCB cluster (the \u0026ldquo;public\u0026rdquo; key). Together, those two files identify your personal computer and the cluster to each other.\n  The concept of SSH key pair.\nCreating an SSH key pair # To create the SSH key pair, open a Terminal on your personal computer, and type:\nssh-keygen -t rsa -b 4096  The option -t rsa is important to generate the right type of SSH key pair. The -b 4096 option indicates the number of bits in the key; a minimum of 2048 is recommended, while larger values generally provide additional strength to the key.\n  Generating an SSH key pair.\nWhen prompted for a filename, immediately press the Return key to accept the default filename and location.\nWhen prompted for a passphrase, it is recommended to type a password that is secret yet memorable to you, as this will be the last line of defense if anyone maliciously acquired your private SSH key file. Alternatively, you can press the Return key immediately without entering a passphrase, leaving your SSH key pair unprotected.\nðŸ‘‰  For privacy and security reasons, the Terminal will not display your passphrase as you type it.   When prompted to confirm your passphrase, type the same answer as you just did and press the Return key.\nFinally, the Terminal should display a message indicating that the key pair was successfully created.\nConfiguring the SSH client # Having generated the SSH key pair, you need to configure the SSH client so that it uses the private key when the ssh command is invoked, to prove its identity to the CCB cluster.\nOpen - or create - the file ~/.ssh/config on your personal computer. In that file, add the following lines:\nHost * IdentityFile ~/.ssh/id_rsa Port 22 Protocol 2 TCPKeepAlive yes ServerAliveInterval 300 ServerAliveCountMax 2 ForwardX11 yes ForwardX11Trusted yes ForwardAgent yes Compression yes XAuthLocation /opt/X11/bin/xauth AddKeysToAgent yes # macOS only UseKeychain yes # macOS only  ðŸ‘‰  Do not include the lines that state 'macOS only' if you are a Windows or Linux user.   Adding the public key on the CCB cluster # Finally, the public key needs to be copied to your account on the CCB cluster, so that the CCB cluster can prove its identity to the client.\nConceptually, the command that you type in the Terminal should be structured as follows:\nssh-copy-id \u0026lt;username\u0026gt;@\u0026lt;remote\u0026gt;  Replace \u0026lt;username\u0026gt; by your own username, and \u0026lt;remote\u0026gt; by one of the login nodes (see General information).\nIf the public key indeed does not exist on your CCB cluster account yet, you will be prompted for your password. Type it, and press the Return key. This adds the public key to the file ~/.ssh/authorized_keys on your account on the CCB cluster.\n  Copying the public SSH key to the CCB cluster.\nLog in with your SSH key pair # You can now log into the CCB cluster using the same ssh command as before, without the need to type in your account password. However, if you have set a passphrase on your SSH key pair, you will be prompted to type this passphrase when the SSH key pair is used.\nssh \u0026lt;username\u0026gt;@\u0026lt;remote\u0026gt;  "}).add({id:5,href:"/wimm_ccb_doks/docs/help/contact/",title:"Contact",description:"Contacts for getting help.",content:"Email # For issues with the MRC WIMM CCB HPC cluster, email genmail@molbiol.ox.ac.uk to open a ticket tracked by the system administrators.\nGitHub # For issues with this documentation, open a GitHub issue â†’.\n"}).add({id:6,href:"/wimm_ccb_doks/docs/help/",title:"Help",description:"Help Doks.",content:""}).add({id:7,href:"/wimm_ccb_doks/docs/ssh/",title:"SSH",description:"SSH Doks.",content:""}).add({id:8,href:"/wimm_ccb_doks/docs/prologue/",title:"Prologue",description:"Prologue Doks.",content:""}).add({id:9,href:"/wimm_ccb_doks/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()